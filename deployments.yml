apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-user
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-user
  template:
    metadata:
      labels:
        app: backend-user
    spec:
      containers:
        - name: backend-user
          image: inventrohyder/udagram-api-user
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: postgres_host
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: postgres_db
                  name: app-config
            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: url
          envFrom:
            - secretRef:
                name: app-secret
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1024Mi"
              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-feed
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-feed
  template:
    metadata:
      labels:
        app: backend-feed
    spec:
      volumes:
        - name: aws-credentials-volume
          secret:
            secretName: app-aws-secret
      containers:
        - name: backend-feed
          image: inventrohyder/udagram-api-feed
          volumeMounts:
            - name: aws-credentials-volume
              readOnly: true
              mountPath: "/root/.aws/"
          env:
            - name: NODE_OPTIONS
              value: --max_old_space_size=4096
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: postgres_host
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: postgres_db
                  name: app-config
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: aws_bucket
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: aws_region
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: aws_profile
            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: url
          envFrom:
            - secretRef:
                name: app-secret
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "512Mi"
            limits:
              memory: "1024Mi"
              cpu: "500m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: reverseproxy
  name: reverseproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reverseproxy
  template:
    metadata:
      labels:
        app: reverseproxy
    spec:
      containers:
        - name: reverseproxy
          image: inventrohyder/reverseproxy
          imagePullPolicy: Always
          resources:
            limits:
              memory: "1024Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: inventrohyder/udagram-frontend
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
